name: Server Deploy

on:
  workflow_dispatch:  
  push:
    branches:
      - master
      - dev
    paths:
      - "Server/**"
      - .github/workflows/server-deploy.yml

jobs:
  job1:
    name: Deploy
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE_NAME: webserver-dev
      DOCKER_URL: tradingkingkoreacentral.azurecr.io
      DOCKER_USERNAME: tradingkingkoreacentral
      SA_PASSWORD: Strongsanklfj2045!@$#%jsjS
      SQL_SERVER_NAME: tradingking-dev-koreacentral-01.database.windows.net
      DBNAME: TradingKing

    services:
      sqlserver:
        image: mcr.microsoft.com/mssql/server:2022-latest
        ports:
          - 1433:1433
        env:
          MSSQL_SA_PASSWORD: ${{ env.SA_PASSWORD }}
          ACCEPT_EULA: Y

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    
    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v5
      with:
        dotnet-version: '9.x'

    - name: Build and Test
      run: |
        dotnet build ./Server -c Release
        dotnet test ./Server -c Release --logger trx
      
    - name: Publish Test Results
      uses: dorny/test-reporter@v2
      if: always()
      with:
        name: Tests
        path: ./Server/**/TestResults/*.trx
        reporter: dotnet-trx

    - name: Install EF Tool
      run: dotnet tool install --global dotnet-ef

    - name: Build migrations script
      run: dotnet ef migrations script        
        --configuration Release
        --idempotent
        --output ${{ github.workspace }}/migrations.sql
        --project ./Server/Infrastructure
        --startup-project ./Server/Host

    - name: Log in to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDS }}

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_URL }}
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Deploy migrations script
      uses: azure/sql-action@v2.3
      with:
        path: ${{ github.workspace }}/migrations.sql
        connection-string: Data Source=${{ env.SQL_SERVER_NAME }},1433;Initial Catalog=${{ env.DBNAME }};User ID=${{ secrets.SQLSRV_ID }};Password=${{ secrets.SQLSRV_PWD }}

    - name: Build and Push Docker image
      uses: docker/build-push-action@v6
      with:
        context: ./Server
        file: ./Server/Host/Dockerfile
        tags: ${{ env.DOCKER_URL }}/${{ env.DOCKER_IMAGE_NAME }}:latest
        push: true